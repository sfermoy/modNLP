log <- read.csv('/tmp/teclog.csv')
log[1,]
log$country
unique(log$country)
sort(unique(log$country))
log <- read.csv('/tmp/teclog.csv')
sort(unique(log$country))
log <- read.csv('/tmp/teclog.csv')
sort(unique(log$country))
plot(log$country)
?barplot
plot(log$country, horiz=T)
table(log$country)
sort(table(log$country))
plot(sort(table(log$country)))
barplot(sort(table(log$country)))
barplot(sort(table(log$country)), horiz=T)
barplot(sort(table(log$country)), horiz=T, las=1)
barplot(sort(table(log$country)), horiz=T, las=1,cex=.8)
barplot(sort(table(log$country)), horiz=T, las=1, cex.axis=.8)
barplot(sort(table(log$country)), horiz=T, las=1, cex.axis=.6)
barplot(sort(table(log$country)), horiz=T, las=1, cex.names=.8)
barplot(sort(table(log$country)), horiz=T, las=1, cex.names=.7)
barplot(sort(table(log$country)), horiz=T, las=1, cex.names=.7,inside=F)
barplot(sort(table(log$country)), horiz=T, las=1, cex.names=.7)
barplot(sort(table(log$country)), horiz=T, las=1, cex.names=.7, log=T)
barplot(sort(table(log$country)), horiz=T, las=1, cex.names=.7, log='x')
barplot(sort(table(log$country)), horiz=T, las=1, cex.names=.7)
sort(table(log$country))
olog <- read.csv('/tmp/teclog-old.csv')
sort(table(olog$country))
barplot(sort(table(olog$country)), horiz=T, las=1, cex.names=.7, log='x')
barplot(sort(table(olog$country)), horiz=T, las=1, cex.names=.7, log='x')
rbind(log,olog)
barplot(sort(table(olog$country)), horiz=T, las=1, cex.names=.7, log='x')
log = loadLogs()
dotchartAccessByCountry(log)
?dotchart
head(log)
 sort(table(log$country))
 tec <- read.csv('/tmp/teclog-tec.csv')
 gok <- read.csv('/tmp/teclog-gok.csv')
 omc <- read.csv('/tmp/teclog-omc.csv')
tec <- cbind(tec, corpus='tec')
gok <- cbind(gok, corpus='gok')
omc <- cbind(gok, corpus='omc')
 omc <- read.csv('/tmp/teclog-omc.csv')
omc <- cbind(omc, corpus='omc')
omc
log <= rbind(omc,gok,tec)
log <- rbind(omc,gok,tec)
head(log)
 table <- sort(table(log$country,log$corpus))
table
log$corpus
log$corpus = as.factor(log$corpus)
log$country
log$country = as.factor(log$country)
 table(log$country,log$corpus)
 table = table(log$country,log$corpus)
table
table[order(table$omc)]
?order
table[order(table)]
table = as.data.frame(table)
table
table[order(omc)]
 table = table(log$country,log$corpus)
table[order(omc)]
table[order(-as.numeric(names(table)))]
table
dotchart(log(table), xaxt='n', cex=0.6)
dotchart(table, xaxt='n', cex=0.6)
t(table)
dotchart(log(t(table)), xaxt='n', cex=0.6)
?dotchart
VADeaths
 dotchart(t(VADeaths), xlim = c(0,100), bg = "skyblue",
              main = "Death Rates in Virginia - 1940", xlab = "rate [ % ]",
              ylab = "Grouping:  Age  x   Urbanity . Gender")
library(dplyr)
library(ggplot2)

plot_data <- iris %>% 
  group_by(Species) %>% 
  summarise_each(funs(mean, sd, n(), q95=quantile(., 0.95), q75=quantile(., 3/4), q25=quantile(., 1/4),  q5 = quantile(., 0.05)), Sepal.Length) %>% 
  mutate(se = sd/sqrt(n),
         left95 = mean - 2*se,
         right95 = mean + 2*se)

plot_data
ggplot(plot_data, aes(x = Species, y = mean)) +
  geom_crossbar(aes(ymin = q5, ymax = q95), fill = "aquamarine1",  color = "aquamarine1", width = 0.1) +
  geom_crossbar(aes(ymin = q25, ymax = q75), fill = "aquamarine4",  color = "aquamarine4", width = 0.1) +
  geom_crossbar(aes(ymin = left95, ymax = right95), fill = "black", color = "black", width = 0.1) +
  coord_flip() +
  theme_minimal()
ggplot(plot_data, aes(x = Species, y = mean)) +
  geom_crossbar(aes(ymin = q5, ymax = q95), fill = "aquamarine1",  color = "aquamarine1", width = 0.1) +
  geom_crossbar(aes(ymin = q25, ymax = q75), fill = "aquamarine4",  color = "aquamarine4", width = 0.01) +

  geom_crossbar(aes(ymin = left95, ymax = right95), fill = "black", color = "black", width = 0.01) +
  coord_flip() +
  theme_minimal()
ggplot(plot_data, aes(x = Species, y = mean)) +
  geom_crossbar(aes(ymin = q5, ymax = q95), fill = "aquamarine1",  color = "aquamarine1", width = 0.03) +
  geom_crossbar(aes(ymin = q25, ymax = q75), fill = "aquamarine4",  color = "aquamarine4", width = 0.03) +
)
ggplot(plot_data, aes(x = Species, y = mean)) +
  geom_crossbar(aes(ymin = q5, ymax = q95), fill = "aquamarine1",  color = "aquamarine1", width = 0.03) +
  geom_crossbar(aes(ymin = q25, ymax = q75), fill = "aquamarine4",  color = "aquamarine4", width = 0.03) +  geom_crossbar(aes(ymin = q25, ymax = q75), fill = "aquamarine4",  color = "aquamarine4", width = 0.03) + geom_crossbar(aes(ymin = left95, ymax = right95), fill = "black", color = "black", width = 0.03) +
)
ggplot(plot_data, aes(x = Species, y = mean)) +
  geom_crossbar(aes(ymin = q5, ymax = q95), fill = "aquamarine1",  color = "aquamarine1", width = 0.03) +
  geom_crossbar(aes(ymin = q25, ymax = q75), fill = "aquamarine4",  color = "aquamarine4", width = 0.03) +  geom_crossbar(aes(ymin = q25, ymax = q75), fill = "aquamarine4",  color = "aquamarine4", width = 0.03) + geom_crossbar(aes(ymin = left95, ymax = right95), fill = "black", color = "black", width = 0.03) 
dotchartAccessByCountry(omc)
dotchartAccessByCountry(gok)
value1 <- abs(rnorm(26))*2
data <- data.frame(
  x=LETTERS[1:26], 
  value1=value1, 
  value2=value1+1+rnorm(26, sd=1) 
)
data
table
as.data.frame(table)
data
data <- data %>% 
  rowwise() %>% 
  mutate( mymean = mean(c(value1,value2) )) %>% 
  arrange(mymean) %>% 
  mutate(x=factor(x, x))
 
data
td = as.data.frame(table)
td %>% rowwise()
table
td %>% rowwise()
td %>% pivot_wider()
library(tidyverse)
td %>% pivot_wider()
td
td %>% pivot_longer()
td 
%>% pivot_longer(cols=Var1)
td %>% pivot_longer(cols=Var1)
td %>% pivot_wider()
td %>% pivot_wider(names_from=Var2)
td %>% pivot_wider(names_from=Var2, values_from=freq)
td %>% pivot_wider(names_from=Var2, values_from=Freq)
td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=sum(gok,omc,tec))
td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=sum)
td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=rowSums(.))
?rowSums
td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=rowSums(tec,gok))
td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc)
td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec)
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec)
ggplot(tt)
geom_point( aes(x=Var1, y=total), color=rgb(0.2,0.7,0.1,0.5), size=3 ) 
ggplot(tt) + geom_point( aes(x=Var1, y=total), color=rgb(0.2,0.7,0.1,0.5), size=3 ) 
ggplot(tt) + geom_point( aes(x=Var1, y=total), color=rgb(0.2,0.7,0.1,0.5), size=3 ) + coord_flip()
ggplot(tt) + geom_point( aes(x=Var1, y=total), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + coord_flip()
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + coord_flip()
tt 
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec) %>% arrange(total)
tt
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec) %>% arrange(desc(total))
tt
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + coord_flip()
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec) %>% mutate(name=fct_reorder(desc(total)))
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec) %>% arrange(desc(total)) %>% mutate(name=factor(Var1, levels=Var1)) %>% 
)
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec) %>% arrange(desc(total)) %>% mutate(name=factor(Var1, levels=Var1)) 
tt
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec) %>% arrange(desc(total)) %>% mutate(Var1=factor(Var1, levels=Var1)) 
tt
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + coord_flip()
tt = td %>% pivot_wider(names_from=Var2, values_from=Freq) %>% mutate(total=gok+omc+tec) %>% arrange(total) %>% mutate(Var1=factor(Var1, levels=Var1)) 
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + coord_flip()
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(gok)), color=red, size=1 ) + coord_flip()
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(gok)), color='red', size=1 ) + coord_flip()
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log(omc)), color='blue', size=1 ) + coord_flip()
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log(omc)), color='blue', size=1 ) + coord_flip() + theme_ipsum() 
library(hrbrthemes)
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log(omc)), color='blue', size=1 ) + coord_flip() + theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(10,gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log(omc)), color='blue', size=1 ) + coord_flip() + theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log(10,total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(10,gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log(10,omc)), color='blue', size=1 ) + coord_flip() + theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log(omc)), color='blue', size=1 ) + coord_flip() + theme_light() 
tt
tt %>% arrange(desc(total))
log(10,214746)
log(1214746)
log(214746)
log(10,214746)
ggplot(tt) + geom_point( aes(x=Var1, y=log(10,total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log(10,gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log(10,omc)), color='blue', size=1 ) + coord_flip() + theme_light() 
log(10,tt$total)
log(tt$total)
log(10,tt$total)
tt$total
log(10,1)
log(10,2)
?log
log10(2)
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + annotation_logticks() +  theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_x_log10() +  theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10() +  theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10() + annotation_logticks()      +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10() + annotation_logticks(sides='b')  +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10() + annotation_logticks(sides='l')  +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10() + annotation_logticks(sides='t')  +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10() + annotation_logticks(sides='b')  +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(labels=total) + annotation_logticks(sides='b')  +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=total, labels=total) + annotation_logticks(sides='b')  +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=tt$total, labels=tt$total) + annotation_logticks(sides='b')  +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=tt$total, labels=tt$total)   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=log10(tt$total), labels=tt$total)   +theme_light() 
sample(10, tt$total)
sample(tt$total, 10)
seq(1, nrow(tt), by=20)
tt$total(seq(1, nrow(tt), by=20))
tt$total[seq(1, nrow(tt), by=20)]
tt$total[seq(1, max(tt$total), by=1000)]
nrow(tt)
seq(1, max(tt$total), by=10)
seq(1, nrow(tt), by=10)
tt$total
tt$total(seq(1, nrow(tt), by=10))
tt$total[seq(1, nrow(tt), by=10)]
tt$total[seq(1, nrow(tt), by=5)]
tt$total[c(seq(1, nrow(tt), by=5),nrow(tt))]
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=log10(tt$total[c(seq(1, nrow(tt), by=5),nrow(tt))]), labels=tt$total[c(seq(1, nrow(tt), by=5),nrow(tt))])   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=log10(tt$total[c(seq(1, nrow(tt), by=10),nrow(tt))]), labels=tt$total[c(seq(1, nrow(tt), by=10),nrow(tt))])   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=log10(tt$total[c(seq(1, nrow(tt), by=20),nrow(tt))]), labels=tt$total[c(seq(1, nrow(tt), by=20),nrow(tt))])   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=log10(n.breaks=10)   +theme_light() 
)
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(breaks=log10(n.breaks=10))   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(labels=function(X)10^X)   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(labels=function(X)round(10^X))   +theme_light() 
?format
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(labels=function(X)format(round(10^X)))   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(labels=function(X)format(round(10^X), scientific=F))   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(labels=function(X)format(round(10^X), scientific=F))   +theme_light() 
ggplot(tt) + geom_point( aes(x=Var1, y=log10(total)), color=rgb(0.2,0.7,0.1,0.5), size=1 ) + geom_point( aes(x=Var1, y=log10(gok)), color='red', size=1 ) + geom_point( aes(x=Var1, y=log10(omc)), color='blue', size=1 ) + coord_flip() + scale_y_log10(labels=function(X)format(round(10^X), scientific=F)) + ylab('Number of accesses')  +theme_light() 
ggplotAccessByCountry()
as.data.frame(table(log$country,log$corpus))
debug(ggplotAccessByCountry)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
head(log)
head(td)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
td %>%
        pivot_wider(names_from=Var2, values_from=Freq)
 td %>%
        pivot_wider(names_from=Var2, values_from=Freq) %>%
        mutate(total=gok+omc+tec) %>%
        arrange(total) %>%
)
 td %>%
        pivot_wider(names_from=Var2, values_from=Freq) %>%
        mutate(total=gok+omc+tec) %>%
        arrange(total)
td %>%
        pivot_wider(names_from=Var2, values_from=Freq)
Q
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
debug(ggplotAccessByCountry)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
head(td)
td %>%
        pivot_wider(names_from=Var2, values_from=Freq) 
Q
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
?sprintf
?format
prettyNum(100000)
prettyNum(100000, big.mark = ',')
prettyNum(100000, big.mark = ',', scientific=F)
prettyNum(100000, big.mark = ',', scientific=F)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
plt = ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
plt + scale_colour_discrete(name="Corpus",
                         breaks=c("total", "tec", "gok", "omc"),
                         labels=c("Total", "TEC", "GoK", "OMC"))
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
td
pl = ggplot(td, aes(x=log(Freq), y=Var1, group=Var2, colour=Var2)
)
pl = ggplot(td, aes(x=log(Freq), y=Var1, group=Var2, colour=Var2))+geom_point()
ggplot(td, aes(x=log(Freq), y=Var1, group=Var2, colour=Var2))+geom_point()
td[order(td$Freq),]
ggplot(td[order(td$Freq),], aes(x=log(Freq), y=Var1, group=Var2, colour=Var2))+geom_point()
 tt 
tt %>% pivot_longer()
tt %>% pivot_longer(cols=c(gok,omc,tec,total))
tt %>% pivot_longer(cols=c(gok,omc,tec,total)) %>% ggplot(aes(x=log(value), y=Var1, group=name, colour=name))+geom_point()
tt %>% pivot_longer(cols=c(gok,omc,tec,total)) %>% ggplot(aes(x=log(value), y=Var1, group=name, colour=name))+geom_point()
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
debug(ggplotAccessByCountry)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
head(td)
head(log)
Q
head(gok)
head(gok[,-1])
head(gok[,-10])
head(gok[,])
head(gok[,-10])
gok = head(gok[,-10])
ggplotAccessByCountry()
c
gok=read.csv('/tmp/teclog-gok.csv')
tec = tec[,-10]
omc = omc[,-10]
head(omc)
head(tec)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
ggplotAccessByCountry(tec=tec, omc=omc, gok=gok)
?ggsave
ggsave('corpus_access.pdf')
ggplotAccessByCountry(tec=NULL, omc=omc, gok=NULL)
ggplotAccessByCountry(cbind(omc, corpus='GoK')
)
omc
head(omc)
omc$country
as.data.frame(table(omc$country)
)
as.data.frame(table(omc$country)) %>% ggplot(aes(x=log10(Freq), y=country)) + geom_point()
as.data.frame(table(omc$country)) %>% ggplot(aes(x=log10(Freq), y=Var1)) + geom_point()
plt = as.data.frame(table(omc$country)) %>% ggplot(aes(x=log10(Freq), y=Var1)) + geom_point()
plt+ xlab('Number of accesses')
plt = as.data.frame(table(omc$country)) %>% arrange(Freq) %>% ggplot(aes(x=log10(Freq), y=Var1)) + geom_point()
as.data.frame(table(omc$country)) %>% arrange(Freq) %>% ggplot(aes(x=log10(Freq), y=Var1)) + geom_point()
as.data.frame(table(omc$country)) %>% arrange(Freq) %>% mutate(Var1=factor(Var1, levels=Var1)) %>% ggplot(aes(x=log10(Freq), y=Var1)) + geom_point()
plt = as.data.frame(table(omc$country)) %>% arrange(Freq) %>% mutate(Var1=factor(Var1, levels=Var1)) %>% ggplot(aes(x=log10(Freq), y=Var1)) + geom_point()
plt + scale_x_log10(labels=function(X)prettyNum(round(10^X),
                                                  big.mark = ',', scientific=F)) +
        theme_light() 
ggplotAccessByCountrySingleCorpus()
ggplotAccessByCountrySingleCorpus()
ggplotAccessByCountrySingleCorpus()
ggplotAccessByCountrySingleCorpus()
ggplotAccessByCountrySingleCorpus()
ggplotAccessByCountrySingleCorpus()
as.data.frame(table(omc$country)) %>% arrange(Freq) %>% mutate(Var1=factor(Var1, levels=Var1))
ggsave('omc_access.pdf')
omc[1,]$month
omc[1,]$year
omc[nrow(omc),]$year
omc[nrow(omc),]$month
omc[nrow(omc)-5,]$month
omc[nrow(omc)-10,]$month
omc[nrow(omc)-15,]$month
omc[nrow(omc)-25,]$month
omc[nrow(omc)-25,]$day
ggplotAccessByCountrySingleCorpus()
ggsave('/tmp/omc_access.pdf')
plotAccessByYear(omc)
plotAccessByYear(omc, manual.legend=T)
q()
y
gok
head(gok)
ggplotAccessByCountrySingleCorpus(gok)
ggplotAccessByCountrySingleCorpus(gok)
ggplotAccessByCountrySingleCorpus(gok, corpus="Genealogies of Knowledge")
ggplotAccessByCountrySingleCorpus(gok, corpus="Genealogies of Knowledge (GoK)")
ggsave('/tmp/gok_access.pdf')
q()
N
